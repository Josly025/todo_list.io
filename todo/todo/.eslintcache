[{"/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/index.js":"1","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/App.jsx":"2","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/Header.jsx":"3","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/Input.jsx":"4","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/TodoList.jsx":"5","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/TaskList.jsx":"6"},{"size":146,"mtime":1607619755313,"results":"7","hashOfConfig":"8"},{"size":545,"mtime":1607912664211,"results":"9","hashOfConfig":"8"},{"size":2236,"mtime":1607919336943,"results":"10","hashOfConfig":"8"},{"size":1638,"mtime":1607917698967,"results":"11","hashOfConfig":"8"},{"size":1423,"mtime":1607918036546,"results":"12","hashOfConfig":"8"},{"size":1699,"mtime":1607918531728,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"t0rw1e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},"/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/index.js",[],["30","31"],"/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/App.jsx",[],"/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/Header.jsx",[],"/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/Input.jsx",["32"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(1),\n      width: \"50ch\",\n      margin: `${theme.spacing(1)}px auto`,\n    },\n  },\n}));\n\nconst Input = ({ setInputText, inputText, setTasks, tasks }) => {\n  const classes = useStyles();\n\n  const inputTextHandler = (e) => {\n    // console.log(e.target.value);\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTasks([\n      ...tasks,\n      { text: inputText, completed: false, id: Math.random() * 1000 },\n    ]);\n    //set State back to 0\n    setInputText(\"\");\n  };\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n      >\n        <Grid>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField\n              id=\"outlined-basic\"\n              label=\"Tasks\"\n              variant=\"outlined\"\n              type=\"text\"\n              value={inputText}\n              onChange={inputTextHandler}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"secondary\"\n              type=\"submit\"\n              onClick={submitTodoHandler}\n            >\n              Add Task\n            </Button>\n          </form>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default Input;\n","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/TodoList.jsx",["33"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TaskList from \"./TaskList\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    maxWidth: 1350,\n  },\n  demo: {\n    backgroundColor: theme.palette.background.paper,\n  },\n  title: {\n    margin: theme.spacing(5, 0, 2),\n  },\n}));\n\nconst TodoList = ({ setTasks, tasks }) => {\n  const classes = useStyles();\n  const [dense, setDense] = React.useState(false);\n\n  return (\n    <div className={classes.root}>\n      <Grid\n        container\n        direction=\"column\"\n        justify=\"space-evenly\"\n        alignItems=\"center\"\n      >\n        <Grid item xs={12} md={6}>\n          <Typography variant=\"h6\" align=\"center\" className={classes.title}>\n            To Complete :\n          </Typography>\n          <div className={classes.demo}>\n            <List dense={dense}>\n              {tasks.map((task) => (\n                <TaskList\n                  setTasks={setTasks}\n                  tasks={tasks}\n                  task={task}\n                  key={task.id}\n                  text={task.text}\n                  id={task.id}\n                />\n              ))}\n            </List>\n          </div>\n        </Grid>\n      </Grid>\n    </div>\n  );\n};\n\nexport default TodoList;\n","/Users/grantpauljoslyn/Github_Josly025/todo_list.io/todo/todo/src/components/TaskList.jsx",["34","35"],"import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Divider from \"@material-ui/core/Divider\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport \"./TaskList.css\";\nconst TaskList = ({ text, task, tasks, setTasks }) => {\n  const [secondary, setSecondary] = React.useState(false);\n\n  //events\n  const deleteHandler = (e) => {\n    setTasks(tasks.filter((el) => el.id !== task.id));\n  };\n\n  const completeHandler = (e) => {\n    setTasks(\n      tasks.map((listItem) => {\n        if (listItem.id === task.id) {\n          return {\n            ...listItem,\n            completed: !listItem.completed,\n          };\n        }\n        return listItem;\n      })\n    );\n  };\n\n  return (\n    <ListItem>\n      <ListItemText\n        style={{ marginRight: 40 }}\n        primary={text}\n        secondary={secondary ? \"Secondary text\" : null}\n        className={`task-item ${task.completed ? \"completed\" : \"\"}`}\n      />\n      <ListItemSecondaryAction>\n        <IconButton\n          edge=\"end\"\n          color=\"primary\"\n          aria-label=\"delete\"\n          onClick={completeHandler}\n        >\n          <CheckCircleIcon />\n        </IconButton>\n        <IconButton\n          edge=\"end\"\n          color=\"secondary\"\n          aria-label=\"delete\"\n          onClick={deleteHandler}\n        >\n          <DeleteIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n};\n\nexport default TaskList;\n",{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":11,"column":7,"nodeType":"42","messageId":"43","endLine":11,"endColumn":13},{"ruleId":"44","severity":1,"message":"45","line":23,"column":17,"nodeType":"46","messageId":"47","endLine":23,"endColumn":25},{"ruleId":"44","severity":1,"message":"48","line":7,"column":8,"nodeType":"46","messageId":"47","endLine":7,"endColumn":15},{"ruleId":"44","severity":1,"message":"49","line":11,"column":21,"nodeType":"46","messageId":"47","endLine":11,"endColumn":33},"no-native-reassign",["50"],"no-negated-in-lhs",["51"],"no-dupe-keys","Duplicate key 'margin'.","ObjectExpression","unexpected","no-unused-vars","'setDense' is assigned a value but never used.","Identifier","unusedVar","'Divider' is defined but never used.","'setSecondary' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]